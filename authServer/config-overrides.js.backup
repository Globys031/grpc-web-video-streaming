
const webpack = require('webpack');
const dotenv = require('dotenv');
const fs = require('fs'); // to check if the file exists
const path = require('path'); // to get the current path

// exports a function that uses the env variable
module.exports = (env) => {
  // Get the root path (assuming your webpack config is in the root of your project!)
  const currentPath = path.join(__dirname);
  
  const prodPath = currentPath + '/../config/env/.env';
  const devPath = currentPath + '/../config/env/.env.development';

  const finalPath = (process.env.NODE_ENV === "development") ? devPath : prodPath
  // Set the path parameter in the dotenv config
  const fileEnv = dotenv.config({ path: finalPath }).parsed;

  // reduce it to a nice object, the same as before (but with the variables from the file)
  const envKeys = Object.keys(fileEnv).reduce((prev, next) => {
    prev[`process.env.${next}`] = JSON.stringify(fileEnv[next]);
    return prev;
  }, {});

  console.log("mode: " + process.env.NODE_ENV)
  console.log(envKeys) // OK, definitely gerai paduodama dabar
  console.log("\n\n\n\nhehe\n\n\n")

  // Dabar paziuret ka sitas daro ir kodel env vis delto neeksportuojamas (nesimato variables)
  return {
    plugins: [
      // DefinePlugin replaces variables in your code with other values or expressions at compile time.
      new webpack.DefinePlugin(envKeys)
    ]
  };
};