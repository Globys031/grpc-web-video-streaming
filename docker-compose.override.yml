services:
  gatewayServer:
    container_name: gatewayserver
    environment:
      # - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "${GATEWAY_FRONTEND_PORT}:80"
      - "${GATEWAY_FRONTEND_SSL_PORT}:443" # SSL Port
      - "${GATEWAY_BACKEND_PORT}:9090"
      - "${GATEWAY_BACKEND_SSL_PORT}:9091" # SSL Port

  authServer:
    container_name: authserver
    environment:
      # - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "${AUTH_PORT}:9092"
      - "${AUTH_SSL_PORT}:9093"

  streamingServer:
    container_name: streamingserver
    environment:
      # - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "${STREAMING_PORT}:9094"
      - "${STREAMING_SSL_PORT}:9095"

  chatServer:
    container_name: chatserver
    environment:
      # - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "${CHAT_PORT}:9096"
      - "${CHAT_SSL_PORT}:9097"

  commentServer:
    container_name: commentserver
    environment:
      # - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "${COMMENT_PORT}:9098"
      - "${COMMENT_SSL_PORT}:9099"

  # TO DO: add password to github or somewhere else instead of directly to the file
  # Create a script that would create the necessary databases and run it on entrypoint
  # Create a script to remove database data upon exiting the container
  # https://stackoverflow.com/questions/41451159/how-to-execute-a-script-when-i-terminate-a-docker-container
  postgreServer:
    container_name: postgreserver
    image: postgres:14.4
    environment:
      # Jeigu postgres_user nenurodytas, tai default user'is bus "postgres"
      # https://github.com/docker-library/docs/blob/master/postgres/README.md
      # - "POSTGRES_USER=root" 
      - "POSTGRES_PASSWORD=example"
    volumes:
      - "./data:/var/lib/postgresql/data"
      # - ".\data\:/var/lib/postgresql/data"
    ports:
      - "${POSTGRE_PORT}:5432"

  adminer:
    container_name: adminer
    restart: always
    ports:
      - ${ADMINER_PORT}8082:8080